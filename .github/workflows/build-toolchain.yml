# Tên của quy trình tự động, sẽ hiển thị trên tab Actions của GitHub
name: Build OLLVM NDK Toolchain

# Cấu hình các sự kiện sẽ kích hoạt workflow này
on:
  # Cho phép chạy workflow này một cách thủ công từ giao diện web
  workflow_dispatch:

jobs:
  build:
    # Tên của công việc (job)
    name: Build Patched AOSP Toolchain

    # Sử dụng máy ảo Ubuntu phiên bản mới nhất do GitHub cung cấp
    runs-on: ubuntu-latest

    # Các bước sẽ được thực thi trong job này
    steps:
      # Bước 1: Tải mã nguồn của repo codetronik/ollvm-ndk
      - name: Checkout OLLVM NDK Patcher repository
        uses: actions/checkout@v4
        with:
          repository: codetronik/ollvm-ndk
          ref: r23c
          path: patcher

      # Bước 2: Cài đặt các gói phần mềm cần thiết cho việc build
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential ca-certificates ccache cmake curl git ninja-build python3 bison
      
      # Bước 3: Cài đặt libffi6 (một thư viện phiên bản cũ cần thiết)
      - name: Install libffi6 dependency
        run: |
          curl -LO http://archive.ubuntu.com/ubuntu/pool/main/libf/libffi/libffi6_3.2.1-8_amd64.deb
          sudo dpkg -i libffi6_3.2.1-8_amd64.deb

      # Bước 4: Cài đặt thủ công phiên bản 'repo' mới nhất
      - name: Install latest repo tool
        run: |
          # Tạo một thư mục bin cục bộ
          mkdir -p ~/.local/bin
          # Tải script repo mới nhất
          curl -L https://raw.githubusercontent.com/android/tools_repo/master/repo > ~/.local/bin/repo
          # Cấp quyền thực thi
          chmod a+x ~/.local/bin/repo
          # Thêm thư mục bin này vào PATH để các bước sau có thể sử dụng
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          ~/.local/bin/repo --version

      # Bước 5: Cấu hình Git cho công cụ 'repo'
      - name: Configure Git for Repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Bước 6: Tải mã nguồn toolchain gốc của AOSP bằng 'repo'
      - name: Initialize and Sync AOSP Toolchain Source
        run: |
          mkdir aosp_toolchain_src
          cd aosp_toolchain_src
          repo init -u https://android.googlesource.com/platform/manifest -b llvm-toolchain
          cp ../patcher/manifest_8481493.xml .repo/manifests/
          repo init -m manifest_8481493.xml
          # Bây giờ lệnh này sẽ hoạt động vì chúng ta đang dùng repo phiên bản mới
          repo sync -c -j$(nproc) --no-clone-bundle --no-tags --depth=1

      # Bước 7: Áp dụng các bản vá OLLVM
      - name: Apply OLLVM patches
        run: |
          cp -rf patcher/llvm aosp_toolchain_src/toolchain/llvm-project/

      # Bước 8: Chạy script build chính
      - name: Run the build script
        timeout-minutes: 360
        working-directory: ./aosp_toolchain_src
        run: python3 toolchain/llvm_android/build.py --no-build=windows --skip-package --skip-runtimes

      # Bước 9: Đóng gói toolchain đã build thành công
      - name: Package the toolchain
        run: |
          cd aosp_toolchain_src/out/install/linux-x86
          tar -cJf ../../../toolchain.tar.xz .

      # Bước 10: Tải lên sản phẩm cuối cùng (toolchain) làm một "artifact"
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: patched-aosp-toolchain
          path: aosp_toolchain_src/toolchain.tar.xz
          retention-days: 7

